# Test Database Configuration
spring.datasource.url=jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.jpa.hibernate.ddl-auto=create-drop
spring.h2.console.enabled=false

# JPA Configuration
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

# Server Configuration
server.port=8081
logging.level.org.springframework.test=DEBUG

# OAuth2 Configuration for Spotify
spring.security.oauth2.client.registration.spotify.client-id=test-client-id
spring.security.oauth2.client.registration.spotify.client-secret=test-client-secret
spring.security.oauth2.client.registration.spotify.redirect-uri=http://localhost:8080/login/oauth2/code/spotify
spring.security.oauth2.client.registration.spotify.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.spotify.scope=user-read-email,user-read-private,playlist-read-private,playlist-read-collaborative

spring.security.oauth2.client.provider.spotify.authorization-uri=https://accounts.spotify.com/authorize
spring.security.oauth2.client.provider.spotify.token-uri=https://accounts.spotify.com/api/token
spring.security.oauth2.client.provider.spotify.user-info-uri=https://api.spotify.com/v1/me
spring.security.oauth2.client.provider.spotify.user-name-attribute=id

# External API Configuration
external.api.spotify.base-url=http://localhost:8080
external.api.spotify.client-id=test-client-id
external.api.spotify.client-secret=test-client-secret
external.api.spotify.token-uri=https://accounts.spotify.com/api/token
external.api.spotify.api-url=https://api.spotify.com/v1

# Last.fm API Configuration
external.api.lastfm.base-url=http://ws.audioscrobbler.com/2.0
external.api.lastfm.api-key=test-api-key

# MusicBrainz API Configuration
external.api.musicbrainz.base-url=http://musicbrainz.org/ws/2
external.api.musicbrainz.api-key=test-api-key 